name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: eco.db
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          export DATABASE_URL=postgresql://postgres:postgres@localhost/eco.db
          python3 -m unittest discover -s tests

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and push Docker image
        run: |
          docker build -t niyonshutidavid/smart_waste_management:latest .
          docker push niyonshutidavid/smart_waste_management:latest

      - name: Deploy to servers
        run: |
          ssh ubuntu@54.82.98.206 'docker pull niyonshutidavid/smart_waste_management:latest && docker-compose -f docker-compose.yml up -d'
          ssh ubuntu@54.82.23.160 'docker pull niyonshutidavid/smart_waste_management:latest && docker-compose -f docker-compose.yml -d'
          ssh ubuntu@18.209.48.20 'sudo systemctl restart nginx'
